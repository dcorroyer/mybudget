/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * Hello API Platform
 * OpenAPI spec version: 1.0.0
 */
import {
  faker
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http
} from 'msw'
import type {
  LoginCheckPost200
} from '.././models'

export const getLoginCheckPostResponseMock = (overrideResponse: Partial< LoginCheckPost200 > = {}): LoginCheckPost200 => ({token: faker.string.alpha(20), ...overrideResponse})


export const getLoginCheckPostMockHandler = (overrideResponse?: LoginCheckPost200 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<LoginCheckPost200> | LoginCheckPost200)) => {
  return http.post('*/auth', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getLoginCheckPostResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}
export const getLoginCheckMock = () => [
  getLoginCheckPostMockHandler()
]
