name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  symfony:
    name: Symfony 7 (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-22.04
    services:
      mariadb:
        image: mariadb:10.5.24
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '8.3' ]
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: apcu, intl, opcache, zip, pdo_mysql, excimer, pcov
          ini-values: pcov.directory=$GITHUB_WORKSPACE/app, pcov.exclude=vendor, pcov.enabled=1
          coverage: pcov
        env:
          update: true

      - name: PHP Lint
        uses: overtrue/phplint@9.1.2

      - name: Install vendors
        working-directory: app
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Install tools vendors
        run: |
          tools_dirs=$(find $GITHUB_WORKSPACE/tools -maxdepth 1 -type d -exec test -e "{}/composer.json" \; -print)
          for dir in $tools_dirs; do
              cd $dir && composer install -q --no-ansi --no-interaction --no-scripts --no-progress
          done

      - name: Check composer.json
        working-directory: app
        run: composer validate

      - name: Check composer normalization
        working-directory: app
        run: composer normalize --dry-run

      - name: ECS
        working-directory: app
        run: $GITHUB_WORKSPACE/tools/ecs/vendor/bin/ecs check --config $GITHUB_WORKSPACE/app/ecs.php

      - name: Rector
        working-directory: app
        run: $GITHUB_WORKSPACE/tools/rector/vendor/bin/rector --dry-run --clear-cache --config=rector.php

      - name: PHPStan
        working-directory: app
        run: $GITHUB_WORKSPACE/tools/phpstan/vendor/bin/phpstan analyse --level=8 --configuration $GITHUB_WORKSPACE/app/phpstan.neon --memory-limit=1G

      - name: Run Tests
        env:
          APP_ENV: test
          DATABASE_URL: "mysql://root:root@127.0.0.1:3306/symfony?serverVersion=10.5.24-MariaDB"
        working-directory: app
        run: |
          php bin/console doctrine:database:create --env=test
          $GITHUB_WORKSPACE/app/vendor/bin/phpunit --coverage-cobertura=coverage.xml

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./app/coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
