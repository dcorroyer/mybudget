name: Symfony

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  #  check-dockerfiles:
  #    name: Check Dockerfile
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v3
  #
  #      - name: Check php/Dockerfile
  #        uses: hadolint/hadolint-action@v3.1.0
  #        with:
  #          dockerfile: .docker/php/Dockerfile
  #
  #      - name: Check php/Dockerfile
  #        uses: hadolint/hadolint-action@v3.1.0
  #        with:
  #          dockerfile: .docker/mkdocs/Dockerfile

  run-ecs:
    name: Run ECS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install ECS
        run: cd $GITHUB_WORKSPACE/tools/ecs && composer install

      - name: Run ECS
        run: cd $GITHUB_WORKSPACE/app && $GITHUB_WORKSPACE/tools/ecs/vendor/bin/ecs check --config $GITHUB_WORKSPACE/app/ecs.php

  run-rector:
    name: Run Rector
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Rector
        run: cd $GITHUB_WORKSPACE/tools/rector && composer install

      - name: Run Rector
        run: cd $GITHUB_WORKSPACE/app && $GITHUB_WORKSPACE/tools/rector/vendor/bin/rector --dry-run --clear-cache --config=rector.php

  run-phpstan:
    name: Run PHPStan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHPStan
        run: cd $GITHUB_WORKSPACE/tools/phpstan && composer install

      - name: Install App
        run: cd $GITHUB_WORKSPACE/app && composer install

      - name: Run PHPStan
        run: cd $GITHUB_WORKSPACE/app && $GITHUB_WORKSPACE/tools/phpstan/vendor/bin/phpstan analyse --level=8 --configuration $GITHUB_WORKSPACE/app/phpstan.neon --memory-limit=1G

  validate-composer:
    name: Global Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer-normalize, composer-require-checker, composer-unused

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Check PHP syntax errors
        uses: overtrue/phplint@9.1.2

      - name: Install App
        run: cd $GITHUB_WORKSPACE/app && composer install

      - name: Check composer.json
        run: cd $GITHUB_WORKSPACE/app && composer validate

      - name: Check composer normalization
        run: cd $GITHUB_WORKSPACE/app && composer normalize --dry-run

      - name: Check composer unused
        run: |
          cd $GITHUB_WORKSPACE/app && composer-unused \
          --excludePackage=runtime/frankenphp-symfony \
          --excludePackage=sentry/sentry-symfony \
          --excludePackage=symfony/dotenv \
          --excludePackage=symfony/flex \
          --excludePackage=symfony/messenger \
          --excludePackage=symfony/runtime \
          --excludePackage=symfony/scheduler \
          --excludePackage=symfony/translation \
          --excludePackage=archtechx/enums \
          --excludePackage=doctrine/doctrine-migrations-bundle \
          --excludePackage=knplabs/knp-paginator-bundle \
          --excludePackage=nyholm/psr7 \
          --excludePackage=pentatrion/vite-bundle \
          --excludePackage=phpstan/phpdoc-parser \

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          ini-values: pcov.directory=$GITHUB_WORKSPACE/app, pcov.exclude=vendor, pcov.enabled=1
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install App
        run: cd $GITHUB_WORKSPACE/app && composer install

      - name: Run Tests
        env:
          APP_ENV: test
          DATABASE_URL: "sqlite:///%kernel.project_dir%/var/data.db"
        run: cd $GITHUB_WORKSPACE/app && $GITHUB_WORKSPACE/app/vendor/bin/phpunit --coverage-cobertura=coverage.xml

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./app/coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
